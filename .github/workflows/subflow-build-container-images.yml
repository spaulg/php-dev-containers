name: 'Build container images'

on:
  workflow_call:
    inputs:
      matrix:
        type: string
        description: 'JSON encoded matrix for versions to build'
        required: true

      push:
        type: boolean
        description: 'Push the build to Docker Hub'
        required: false
        default: false

    secrets:
      DOCKERHUB_USERNAME: { required: true}
      DOCKERHUB_TOKEN: { required: true}

env:
  DAGGER_CLOUD_TOKEN: ${{ secrets.DAGGER_CLOUD_TOKEN }}

jobs:
  build_images:
    name: PHP ${{ matrix.short_version }}
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    strategy:
      fail-fast: false
      matrix: ${{fromJSON(inputs.matrix)}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: dagger/go.mod
          cache-dependency-path: "**/*.sum"

      - name: Install Dagger CLI
        run: |
          engine_version=$(jq -r '.engineVersion' < dagger.json | sed 's/v//')
          cd /usr/local && { curl -sSfL https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=$engine_version sh; cd -; }
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Ensure work directory exists
        shell: bash
        run: |
          mkdir -p work

      - name: Downloading PHP source
        shell: bash
        run: |
          dagger call --version ${{ matrix.full_version }} \
            download-php-source \
            export --path "work/${{ matrix.full_version }}.orig.tar.gz"

      - name: Build packages
        shell: bash
        run: |
          dagger call --version ${{ matrix.full_version }} \
            build-php-packages --source-archive "work/${{ matrix.full_version }}.orig.tar.gz" \
            export --path "work/${{ matrix.full_version }}"

      - name: Build images
        shell: bash
        run: |
          dagger call --version ${{ matrix.full_version }} \
            build-php-image --package-directory "work/${{ matrix.full_version }}" \
            publish --address index.docker.io/spaulg/php-dev-containers:${{ matrix.short_version }}-amd64

      - name: Save deb files to build
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: php-${{ matrix.short_version }}
          if-no-files-found: ignore
          path: |
            assets/packages/*.deb
